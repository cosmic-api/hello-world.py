{"name":"Hello-world.py","tagline":"Example API using Cosmic","body":"### What is Cosmic?\r\n[Cosmic](http://www.cosmic-api.com) is a high-level framework for crafting web APIs.\r\nThis page gives you an overview of how to write a simple Cosmic API.\r\nInstructions on how to run this example can be found on [GitHub project](https://github.com/cosmic-api/hello-world.py).\r\n\r\n### The Server\r\n\r\n```python\r\nfrom cosmic.tools import normalize_schema\r\nfrom cosmic.api import API\r\n\r\n# Define name of the API\r\napi = API.create('cosmic_hello_world')\r\n```\r\n\r\n`normalize_schema` that we are importing here is a helper function that turns JSON-like data structure into a schema model. We'll get to see how it's used pretty soon.\r\n\r\n`API` class is used to create new instance of Cosmic API.\r\n\r\n```python\r\n# Set of people\r\npeople = set()\r\n```\r\n\r\nThis is where we store bunch of names.\r\n\r\n```python\r\n@api.action(\r\n    accepts=normalize_schema({\"type\": \"string\"}),\r\n    returns=normalize_schema({\"type\": \"string\"})\r\n)\r\n```\r\n\r\nHere we are annotating `remember_me` function as an API endpoint.\r\nThis function then automatically gets assigned an URL `/actions/remember_me`.\r\n\r\nSince `remember_me` will take in `string` name of a person, we set `accepts` keyword argument to a schema which represents a single `string` type. Note that `normalize_schema` helper function constructs proper schema object from JSON-like data structure.\r\n\r\n`returns` keyword argument defines return value of the `remember_me` function.\r\nWhich is also simply a `string`.\r\n\r\n\r\n```python\r\ndef remember_me(name):\r\n  \"\"\"Remember names upto 10 people.\r\n  \"\"\"\r\n  if name not in people:\r\n    # Too many people to remember!\r\n    if len(people) >= 10:\r\n      people.pop()\r\n    # Add new person\r\n    people.add(name)\r\n    return \"Hello, %s! I'll remember you.\" % name\r\n  else:\r\n    return \"Welcome back, %s.\" % name\r\n```\r\n\r\nActual function that remembers up to 10 names.\r\n\r\n\r\nNote that the parameter `name` is a regular python `str` type.\r\nWhat is happening under the hood is that the JSON body of HTTP request is parsed, validated, and normalized to python's native `str` type.\r\n\r\n\r\nThe return value goes through a similar process as well, returned native `str` type is validated and serialized into JSON, forming `application/json` response.\r\n\r\n\r\n```python\r\n@api.action(\r\n    returns=normalize_schema({\r\n        \"type\": \"array\",\r\n        \"items\": {\"type\": \"string\"}\r\n    })\r\n)\r\ndef list_people():\r\n  \"\"\"List everyone I know.\r\n  \"\"\"\r\n  return list(people)\r\n```\r\n\r\nSecond action, which takes no argument, returns list of names in the set.\r\n\r\n\r\nHere we see a bit more complex return type. `list_people` function returns a python `list`, which will then be validated, and serialized to a JSON `array` containing `string`s.  \r\n\r\n\r\n```python\r\n# Start listening to HTTP requests\r\napi.run(port=8080, debug=True)\r\n```\r\n\r\nWhen the server is started, Cosmic generates an endpoint at `/spec.json` which describes all endpoints on this server precisely.\r\nWe think that well defined, simple, and portable specs like these help both API developers and consumers to work together nicely.\r\n\r\n\r\n### Using the API with Cosmic Client\r\n\r\nAPIs built with Cosmic are well defined by the spec. This allows us to build native client libraries on the fly by loading `/spec.json` from the server.\r\n\r\nFor example, with `hello-world.py`, we can do\r\n\r\n```python\r\nfrom cosmic.api import API\r\nclient = API.load('http://localhost:8080/spec.json')\r\n\r\nclient.actions.remember_me(\"Cosmic\") # prints u\"Hello, Cosmic! I'll remember you.\"\r\nclient.actions.remember_me(\"Cosmic\") # prints u'Welcome back, Cosmic.'\r\n\r\nclient.actions.remember_me(\"Hello\") # prints u\"Hello, Hello! I'll remember you.\"\r\n\r\nclient.actions.list_people() # returns [u'Cosmic', u'Hello']\r\n```\r\n\r\n\r\n\r\n***\r\n\r\nVisit [Cosmic](http://www.cosmic-api.com) if you want to lean more.","google":"UA-36006075-1","note":"Don't delete this file! It's used internally to help with page regeneration."}